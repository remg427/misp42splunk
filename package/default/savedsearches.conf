# http://docs.splunk.com/Documentation/CIM/4.12.0/User/Malware
[MISP_getioc_filename_related_last1d_to_KV_MISP_filename]
action.email.useNSSubject = 1
alert.track = 0
cron_schedule = 0 0 * * *
dispatch.earliest_time = -24h@h
dispatch.latest_time = now
display.events.fields = ["host"]
display.general.timeRangePicker.show = 0
display.general.type = statistics
display.page.search.mode = verbose
display.page.search.tab = statistics
display.visualizations.charting.chart = bar
display.visualizations.show = 0
enableSched = 0
disabled = 1
request.ui_dispatch_app = misp42splunk
request.ui_dispatch_view = search
search = | mispgetioc misp_instance=misp last=1d geteventtag=t pipesplit=t type="filename,md5,sha1,sha256,sha512,ssdeep,filename|md5,filename|sha1,filename|sha256,filename|sha512,filename|ssdeep" \
| where isnotnull(misp_filename) or isnotnull(misp_md5) or isnotnull(misp_sha1) or isnotnull(misp_sha256) or isnotnull(misp_sha512) or isnotnull(misp_ssdeep) | fields - _time, _raw, host \
| outputlookup append=true MISP_filename 

# http://docs.splunk.com/Documentation/CIM/4.12.0/User/Web
[MISP_getioc_web_related_last1d_to_KV_MISP_web]
action.email.useNSSubject = 1
alert.track = 0
cron_schedule = 5 0 * * *
dispatch.earliest_time = -24h@h
dispatch.latest_time = now
display.events.fields = ["host"]
display.general.timeRangePicker.show = 0
display.general.type = statistics
display.page.search.mode = verbose
display.page.search.tab = statistics
display.visualizations.charting.chart = bar
display.visualizations.show = 0
enableSched = 0
disabled = 1
request.ui_dispatch_app = misp42splunk
request.ui_dispatch_view = search
search = | mispgetioc misp_instance=misp last=1d pipesplit=t geteventtag=t type="domain,ip-dst,ip-src,url,user_agent,domain|ip"\
| where isnotnull(misp_domain) or isnotnull(misp_ip_dst) or isnotnull(misp_ip_src) or isnotnull(misp_url) or isnotnull(misp_user_agent) \
| eval misp_user_agent_length=if(isnotnull(misp_user_agent),len(misp_user_agent),'') | fields - _time, _raw, host \
| outputlookup MISP_web append=true


# http://docs.splunk.com/Documentation/CIM/4.12.0/User/Email
[MISP_getioc_email_related_last1d_to_KV_MISP_email]
action.email.useNSSubject = 1
alert.track = 0
cron_schedule = 3 0 * * *
dispatch.earliest_time = -24h@h
dispatch.latest_time = now
display.events.fields = ["host"]
display.general.timeRangePicker.show = 0
display.general.type = statistics
display.page.search.mode = verbose
display.page.search.tab = statistics
display.visualizations.charting.chart = bar
display.visualizations.show = 0
enableSched = 0
disabled = 1
request.ui_dispatch_app = misp42splunk
request.ui_dispatch_view = search
search = | mispgetioc misp_instance=misp last=1d geteventtag=t type="email-attachment,email-src,email-src-display-name,email-subject" limit=0\
| where isnotnull(misp_email_attachment) or isnotnull(misp_email_src) or isnotnull(misp_email_src_display_name) or isnotnull(misp_email_subject) | fields - _time, _raw, host \
| outputlookup MISP_email append=true


[MISP_email_intel_last1d]
action.email.useNSSubject = 1
alert.track = 0
dispatch.earliest_time = -24h@h
dispatch.latest_time = now
display.general.timeRangePicker.show = 0
display.general.type = statistics
display.page.search.mode = verbose
display.page.search.tab = statistics
display.visualizations.show = 0
enableSched = 0
disabled = 1
request.ui_dispatch_app = misp42splunk
request.ui_dispatch_view = search
search = | mispgetioc misp_instance=misp last=1d to_ids=t geteventtag=t type="email-src,email-subject" limit=0\
| where isnotnull(misp_email_src) or isnotnull(misp_email_subject)\
| eval weight=case(match(misp_tag,"tlp:white"),20,match(misp_tag,"tlp:green"),40,match(misp_tag,"tlp:amber"),80,match(misp_tag,"tlp:red"),100,true(),50)\
| eval description = "https://" + misp_host + "/events/view/" + misp_event_uuid | rename misp_email_src AS src_user misp_email_subject AS subject \
| where isnotnull(src_user) or isnotnull(subject) | fields description,src_user,subject,weight \
| outputlookup misp_email_intel.csv

[MISP_file_intel_last1d]
action.email.useNSSubject = 1
alert.track = 0
dispatch.earliest_time = -24h@h
dispatch.latest_time = now
display.general.timeRangePicker.show = 0
display.general.type = statistics
display.page.search.mode = verbose
display.page.search.tab = statistics
display.visualizations.show = 0
enableSched = 0
disabled = 1
request.ui_dispatch_app = misp42splunk
request.ui_dispatch_view = search
search = | mispgetioc misp_instance=misp last=1d to_ids=t geteventtag=t pipesplit=t type="filename,md5,sha1,sha256,sha512,ssdeep,filename|md5,filename|sha1,filename|sha256,filename|sha512,filename|ssdeep"\
| eval description = "https://" + misp_host + "/events/view/" + misp_event_uuid \
| eval description=if(isnotnull(misp_filename),description  + " on " + misp_filename,description) \
| eval description=if(isnotnull(misp_md5),description + " MD5,",description) \
| eval description=if(isnotnull(misp_sha1),description + " SHA1,",description) \
| eval description=if(isnotnull(misp_sha256),description + " SHA256,",description) \
| eval description=if(isnotnull(misp_sha512),description + " SHA512,",description) \
| eval description=if(isnotnull(misp_ssdeep),description + " SSEEEP",description) \
| eval file_hash=mvappend(misp_md5, misp_sha1, misp_sha256, misp_sha512, misp_ssdeep)  \
| eval file_hash=coalesce(file_hash,"preserve_single_value_file_hash") \
| mvexpand file_hash \
| eval file_hash=if(file_hash="preserve_single_value_file_hash", null(), file_hash) \
| rename misp_filename AS file_name | where isnotnull(file_name) or isnotnull(file_hash) \
| eval weight=case(match(misp_tag,"tlp:white"),20,match(misp_tag,"tlp:green"),40,match(misp_tag,"tlp:amber"),80,match(misp_tag,"tlp:red"),100,true(),50) \
| fields description,file_hash,file_name,weight \
| outputlookup misp_file_intel.csv

[MISP_http_intel_last1d]
action.email.useNSSubject = 1
alert.track = 0
dispatch.earliest_time = -24h@h
dispatch.latest_time = now
display.general.timeRangePicker.show = 0
display.general.type = statistics
display.page.search.mode = verbose
display.page.search.tab = statistics
display.visualizations.show = 0
enableSched = 0
disabled = 1
request.ui_dispatch_app = misp42splunk
request.ui_dispatch_view = search
search = | mispgetioc misp_instance=misp last=1d to_ids=t geteventtag=t type="url,user_agent" \
| eval description = "https://" + misp_host + "/events/view/" + misp_event_uuid \
| rename misp_user_agent AS http_user_agent, misp_url AS url \
| eval weight=case(match(misp_tag,"tlp:white"),20,match(misp_tag,"tlp:green"),40,match(misp_tag,"tlp:amber"),80,match(misp_tag,"tlp:red"),100,true(),50) \
| where isnotnull(url) or isnotnull(http_user_agent)| fields description,http_referrer,http_user_agent,url,weight\
| outputlookup misp_http_intel.csv

[MISP_ip_intel_last1d]
action.email.useNSSubject = 1
alert.track = 0
dispatch.earliest_time = -24h@h
dispatch.latest_time = now
display.general.timeRangePicker.show = 0
display.general.type = statistics
display.page.search.mode = verbose
display.page.search.tab = statistics
display.visualizations.show = 0
enableSched = 0
disabled = 1
request.ui_dispatch_app = misp42splunk
request.ui_dispatch_view = search
search = | mispgetioc misp_instance=misp last=1d to_ids=t geteventtag=t pipesplit=t type="domain,ip-dst,ip-src,domain|ip" limit=0\
| eval description = "https://" + misp_host + "/events/view/" + misp_event_uuid\
| rename misp_domain AS domain\
| eval ip = mvappend(misp_ip_dst,misp_ip_src)\
| eval ip = coalesce(ip,"preserve_single_value_ip")\
| mvexpand ip\
| eval ip = if(ip="preserve_single_value_ip", null(), ip)\
| eval weight=case(match(misp_tag,"tlp:white"),20,match(misp_tag,"tlp:green"),40,match(misp_tag,"tlp:amber"),80,match(misp_tag,"tlp:red"),100,true(),50)\
| where isnotnull(ip) or isnotnull(domain) | fields description,domain,ip,weight\
| outputlookup misp_ip_intel.csv

[MISP dummy test action create alert]
action.misp_alert_create_event = 1
action.misp_alert_create_event.param.description = test all scenarios
action.misp_alert_create_event.param.distribution = 3
action.misp_alert_create_event.param.eventid = inline_eventkey
action.misp_alert_create_event.param.eventkey = inline_eventkey
action.misp_alert_create_event.param.info = Test MISP event
action.misp_alert_create_event.param.misp_instance = misp
action.misp_alert_create_event.param.pap = PAP_GREEN
action.misp_alert_create_event.param.publish_on_creation = 1
action.misp_alert_create_event.param.tags = test_alert,creation,update
action.misp_alert_create_event.param.title = Test MISP create event
action.misp_alert_create_event.param.tlp = TLP_GREEN
action.misp_alert_create_event.param.unique = inline_eventkey
action.webhook.enable_allowlist = 0
alert.suppress = 0
alert.track = 1
counttype = number of events
cron_schedule = 15 * * * *
description = Test to create or update MISP events including simple or combined attributes, domain|ip, email, file
disabled = 1
dispatch.earliest_time = -15m
dispatch.latest_time = now
display.general.type = statistics
display.page.search.mode = fast
display.page.search.tab = statistics
enableSched = 0
disabled = 1
quantity = 0
relation = greater than
request.ui_dispatch_app = misp42splunk
request.ui_dispatch_view = search
search = | makeresults count=10\
| streamstats count as rc\
| eval no_domain="one.one.one.one", no_ip="1.1.1.1", no_first_seen=(now() - 86400), no_last_seen=strftime(now(),"%FT%T"), no_port="53", no_registration_date=strptime("2020-01-01T00:00:00","`%FT%T"), no_text="test domain|ip object"\
| eval fo_filename="malware_" + md5(tostring(now()+rc)) +".exe", fo_fullpath="C:\Windows\system32\malware_" + md5(tostring(now()+rc)) + ".exe", fo_md5=md5(fo_filename), fo_sha1=sha1(fo_filename), fo_sha256=sha256(fo_filename)\
| eval eo_bcc="name@domain.com", eo_cc=md5(tostring(now()+rc)) + "@domain.com", eo_from="phishing" + md5(tostring(now() + rc)) + "@maldom.com", eo_ip_src="1.2.3." + rc, eo_subject="Your account is going to be locked in " + rc + " days", eo_to="you.as.victim@gooddom.com"\
| eval inline_eventkey=case(rc % 7 == 0, "fd31ca83-2e50-40e1-9ffb-2f14155fd169", rc % 5 == 0, "67", rc % 2 == 0, "even", 1==1, null())\
| eval misp_info = coalesce("test with eventkey:" + inline_eventkey + " - " + rc, "test MISP index " + rc) 

